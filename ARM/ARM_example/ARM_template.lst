


ARM Macro Assembler    Page 1 


    1 00000000         ; STACK Configuration
    2 00000000         
    3 00000000 00000400 
                       USR_Stack_Size
                               EQU              0x00000400
    4 00000000         
    5 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
    6 00000000         
    7 00000000         Stack_Mem
                               SPACE            USR_Stack_Size ; reserving a 
    8 00000400         Stack_Top
    9 00000400         
   10 00000400         
   11 00000400         ; Heap Configuration
   12 00000400         
   13 00000400 00004000 
                       Heap_Size
                               EQU              0x00004000  ; 16KB RAM
   14 00000400         
   15 00000400                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   16 00000000         __heap_base
   17 00000000         var
   18 00000000         Heap_Mem
                               SPACE            Heap_Size
   19 00004000         __heap_limit
   20 00004000         
   21 00004000                 PRESERVE8
   22 00004000         
   23 00004000         ; Area Definition and Entry Point
   24 00004000         ;  Startup Code must be linked first at Address at which
                        it expects to run.
   25 00004000         
   26 00004000         
   27 00004000                 AREA             RESET, CODE, READONLY
   28 00000000                 ARM
   29 00000000         
   30 00000000         
   31 00000000         ; Exception Vectors
   32 00000000         ;  Mapped to Address 0.
   33 00000000         ;  Absolute addressing mode must be used.
   34 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
   35 00000000         
   36 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr
   37 00000004 E59FF018        LDR              PC, Undef_Addr
   38 00000008 E59FF018        LDR              PC, SWI_Addr
   39 0000000C E59FF018        LDR              PC, PAbt_Addr
   40 00000010 E59FF018        LDR              PC, DAbt_Addr
   41 00000014 E1A00000        NOP                          ; Reserved Vector 
   42 00000018         ;               LDR     PC, IRQ_Addr
   43 00000018 E51FFFF0        LDR              PC, [PC, #-0x0FF0] ; Vector fro
                                                            m VicVectAddr
   44 0000001C E59FF018        LDR              PC, FIQ_Addr
   45 00000020         
   46 00000020 00000000 
                       Reset_Addr



ARM Macro Assembler    Page 2 


                               DCD              Reset_Handler
   47 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
   48 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Handler
   49 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
   50 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
   51 00000034 00000000        DCD              0           ; Reserved Address 
                                                            
   52 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
   53 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQ_Handler
   54 00000040         
   55 00000040 EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
   56 00000044 EAFFFFFE 
                       SWI_Handler
                               B                SWI_Handler
   57 00000048 EAFFFFFE 
                       PAbt_Handler
                               B                PAbt_Handler
   58 0000004C EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
   59 00000050 EAFFFFFE 
                       IRQ_Handler
                               B                IRQ_Handler
   60 00000054 EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
   61 00000058         
   62 00000058         ; Literal pool definition              
   63 00000058 00000001 
              00000002 
              00000003 
              00000004 
              00000005 
              00000006 
              00000007 
              00000008 
              00000009 
              00000001 
              00000002 
              00000003 
              00000004 
              00000005 
              00000006 
              00000007 
              00000008 



ARM Macro Assembler    Page 3 


              00000001 
              00000002 
              00000003 
              00000004 Constant_Values
                               DCD              1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7
,8,1,2,3,4
   64 000000AC         
   65 000000AC         ; Reset Handler          
   66 000000AC         Reset_Handler
   67 000000AC E59FE074        LDR              LR, =Reset_Handler ; the operat
                                                            or = is used to cop
                                                            y the address of a 
                                                            label 
   68 000000B0         ;equivalent to 
   69 000000B0         ;ADR  LR, Reset_Handler
   70 000000B0         
   71 000000B0 E59FD074        LDR              SP, =Stack_Top
   72 000000B4         
   73 000000B4         
   74 000000B4         ; my code
   75 000000B4         
   76 000000B4 E59F4074        LDR              r4, =Constant_Values
   77 000000B8 E5945000        LDR              r5, [r4]
   78 000000BC         
   79 000000BC E3B00001        movs             r0, #1
   80 000000C0 03A01001        moveq            r1, #1
   81 000000C4 E3E02000        mvn              r2, #0
   82 000000C8         
   83 000000C8 E59F3064        ldr              r3, =var
   84 000000CC E5832004        str              r2, [r3,#4]
   85 000000D0 E59F2060        ldr              r2, =0x11223344
   86 000000D4 E3A01004        mov              r1, #4
   87 000000D8 E7A32001        str              r2, [r3,r1]!
   88 000000DC E59F2058        ldr              r2, =0x55667788
   89 000000E0 E4832004        str              r2, [r3],#4
   90 000000E4         
   91 000000E4 E3A01102        ldr              r1, =0x80000000
   92 000000E8 E3A00102        ldr              r0, =0x80000000
   93 000000EC E0912000        adds             r2, r1, r0
   94 000000F0 00920001        addeqs           r0, r2, r1
   95 000000F4         
   96 000000F4 E59F0044        ldr              r0, =0x01001000
   97 000000F8 E59F1044        ldr              r1, =0x00001001
   98 000000FC E3A02A01        ldr              r2, =0x00001000
   99 00000100 E1C11002        bic              r1, r2
  100 00000104 E1100001        tst              r0, r1
  101 00000108         
  102 00000108 0A000000        BEQ              LABEL
  103 0000010C E59F3034        LDR              R3, =0xFFFFFFFF
  104 00000110         LABEL
  105 00000110         ; equivalent to
  106 00000110 159F3030        LDRNE            R3, =0xFFFFFFFF
  107 00000114         
  108 00000114 EB000000        BL               next
  109 00000118 E1A00000        nop
  110 0000011C         next
  111 0000011C E3A01D42        mov              r1, #4224
  112 00000120 E59F2024        ldr              r2, =4225
  113 00000124         



ARM Macro Assembler    Page 4 


  114 00000124         
  115 00000124         
  116 00000124         ;MOV PC, LR
  117 00000124         ; equivalent to
  118 00000124 E12FFF1E        BX               LR
  119 00000128         
  120 00000128                 END
              00000000 
              00000000 
              00000000 
              00000000 
              11223344 
              55667788 
              01001000 
              00001001 
              FFFFFFFF 
              00001081 
Command Line: --debug --xref --apcs=interwork --depend=ARM_template.d -oARM_tem
plate.o -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\Philips --predefine="__EVAL SETA 1"
 --list=ARM_template.lst ARM_template.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 5 in file ARM_template.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 7 in file ARM_template.s
   Uses
      None
Comment: Stack_Mem unused
Stack_Top 00000400

Symbol: Stack_Top
   Definitions
      At line 8 in file ARM_template.s
   Uses
      At line 71 in file ARM_template.s
Comment: Stack_Top used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 15 in file ARM_template.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 18 in file ARM_template.s
   Uses
      None
Comment: Heap_Mem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 16 in file ARM_template.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00004000

Symbol: __heap_limit
   Definitions
      At line 19 in file ARM_template.s
   Uses
      None
Comment: __heap_limit unused
var 00000000

Symbol: var
   Definitions
      At line 17 in file ARM_template.s
   Uses
      At line 83 in file ARM_template.s
Comment: var used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Constant_Values 00000058

Symbol: Constant_Values
   Definitions
      At line 63 in file ARM_template.s
   Uses
      At line 76 in file ARM_template.s
Comment: Constant_Values used once
DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 50 in file ARM_template.s
   Uses
      At line 40 in file ARM_template.s
Comment: DAbt_Addr used once
DAbt_Handler 0000004C

Symbol: DAbt_Handler
   Definitions
      At line 58 in file ARM_template.s
   Uses
      At line 50 in file ARM_template.s
      At line 58 in file ARM_template.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 53 in file ARM_template.s
   Uses
      At line 44 in file ARM_template.s
Comment: FIQ_Addr used once
FIQ_Handler 00000054

Symbol: FIQ_Handler
   Definitions
      At line 60 in file ARM_template.s
   Uses
      At line 53 in file ARM_template.s
      At line 60 in file ARM_template.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 52 in file ARM_template.s
   Uses
      None
Comment: IRQ_Addr unused
IRQ_Handler 00000050

Symbol: IRQ_Handler
   Definitions
      At line 59 in file ARM_template.s
   Uses
      At line 52 in file ARM_template.s
      At line 59 in file ARM_template.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

LABEL 00000110

Symbol: LABEL
   Definitions
      At line 104 in file ARM_template.s
   Uses
      At line 102 in file ARM_template.s
Comment: LABEL used once
PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 49 in file ARM_template.s
   Uses
      At line 39 in file ARM_template.s
Comment: PAbt_Addr used once
PAbt_Handler 00000048

Symbol: PAbt_Handler
   Definitions
      At line 57 in file ARM_template.s
   Uses
      At line 49 in file ARM_template.s
      At line 57 in file ARM_template.s

RESET 00000000

Symbol: RESET
   Definitions
      At line 27 in file ARM_template.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 46 in file ARM_template.s
   Uses
      At line 36 in file ARM_template.s
Comment: Reset_Addr used once
Reset_Handler 000000AC

Symbol: Reset_Handler
   Definitions
      At line 66 in file ARM_template.s
   Uses
      At line 46 in file ARM_template.s
      At line 67 in file ARM_template.s

SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 48 in file ARM_template.s
   Uses
      At line 38 in file ARM_template.s
Comment: SWI_Addr used once
SWI_Handler 00000044



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: SWI_Handler
   Definitions
      At line 56 in file ARM_template.s
   Uses
      At line 48 in file ARM_template.s
      At line 56 in file ARM_template.s

Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 47 in file ARM_template.s
   Uses
      At line 37 in file ARM_template.s
Comment: Undef_Addr used once
Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 55 in file ARM_template.s
   Uses
      At line 47 in file ARM_template.s
      At line 55 in file ARM_template.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 36 in file ARM_template.s
   Uses
      None
Comment: Vectors unused
next 0000011C

Symbol: next
   Definitions
      At line 110 in file ARM_template.s
   Uses
      At line 108 in file ARM_template.s
Comment: next used once
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00004000

Symbol: Heap_Size
   Definitions
      At line 13 in file ARM_template.s
   Uses
      At line 18 in file ARM_template.s
Comment: Heap_Size used once
USR_Stack_Size 00000400

Symbol: USR_Stack_Size
   Definitions
      At line 3 in file ARM_template.s
   Uses
      At line 7 in file ARM_template.s
Comment: USR_Stack_Size used once
2 symbols
355 symbols in table
