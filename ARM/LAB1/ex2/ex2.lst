


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             MYCODE, CODE, READONLY
    2 00000000         
    3 00000000         ENTRY
    4 00000000         
    5 00000000 E3A00003        MOV              r0, #3
    6 00000004 E3A01002        MOV              r1, #2
    7 00000008 E3A02001        MOV              r2, #1
    8 0000000C         
    9 0000000C E1500001        CMP              r0, r1      ;if R0 > R1 -> swap
                                                             registers (use r3 
                                                            as temporary regist
                                                            er)
   10 00000010 81A03000        MOVHI            R3, R0
   11 00000014 81A00001        MOVHI            R0, R1
   12 00000018 81A01003        MOVHI            R1, R3
   13 0000001C         
   14 0000001C E1500002        CMP              r0, r2
   15 00000020 81A03000        MOVHI            R3, R0
   16 00000024 81A00002        MOVHI            R0, R2
   17 00000028 81A02003        MOVHI            R2, R3
   18 0000002C         
   19 0000002C E1510002        CMP              r1, r2
   20 00000030 81A03001        MOVHI            R3, R1
   21 00000034 81A01002        MOVHI            R1, R2
   22 00000038 81A02003        MOVHI            R2, R3
   23 0000003C         
   24 0000003C         ;checking if R1 and R2 are multiple of R0 by multiple ad
                       dition
   25 0000003C E3A06000        MOV              r6,#0       ;reset counter
   26 00000040         loop1
   27 00000040 E0844000        ADD              r4,r4,r0
   28 00000044 E1540001        CMP              r4,r1
   29 00000048 92866001        ADDLS            r6,r6,#1    ;increment counter 
                                                            (how many times R0 
                                                            is in R1)
   30 0000004C 3AFFFFFB        BLO              loop1       ;exit loop if R4 > 
                                                            R1 (not divisible)
   31 00000050 01A04006        MOVEQ            r4,r6       ;save the quotient 
                                                            if divisible
   32 00000054         
   33 00000054 E3A06000        MOV              r6,#0
   34 00000058         loop2
   35 00000058 E0855000        ADD              r5,r5,r0
   36 0000005C E1550002        CMP              r5,r2
   37 00000060 92866001        ADDLS            r6,r6,#1
   38 00000064 3AFFFFFB        BLO              loop2
   39 00000068 01A05006        MOVEQ            r5,r6
   40 0000006C         
   41 0000006C                 END
Command Line: --debug --xref --apcs=interwork --depend=ex2.d -oex2.o -IC:\Keil\
ARM\INC -IC:\Keil\ARM\INC\Philips --predefine="__EVAL SETA 1" --list=ex2.lst ex
2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ENTRY 00000000

Symbol: ENTRY
   Definitions
      At line 3 in file ex2.s
   Uses
      None
Comment: ENTRY unused
MYCODE 00000000

Symbol: MYCODE
   Definitions
      At line 1 in file ex2.s
   Uses
      None
Comment: MYCODE unused
loop1 00000040

Symbol: loop1
   Definitions
      At line 26 in file ex2.s
   Uses
      At line 30 in file ex2.s
Comment: loop1 used once
loop2 00000058

Symbol: loop2
   Definitions
      At line 34 in file ex2.s
   Uses
      At line 38 in file ex2.s
Comment: loop2 used once
4 symbols
328 symbols in table
