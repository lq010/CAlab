


ARM Macro Assembler    Page 1 


    1 00000000 00000004 
                       size_32 EQU              0x00000004
    2 00000000         
    3 00000000                 AREA             MYDATA, NOINIT, READWRITE, ALIG
N=3
    4 00000000         mean    SPACE            size_32
    5 00000004         max_differ
                               SPACE            size_32
    6 00000008         max_value
                               SPACE            size_32
    7 0000000C         min_value
                               SPACE            size_32
    8 00000010         
    9 00000010                 AREA             MYCODE, CODE, READONLY
   10 00000000                 ENTRY
   11 00000000 E3A00000        MOV              R0,#0       ;(otherwise give th
                                                            e error "Entry poin
                                                            t does not point to
                                                             an instruction") 
   12 00000004         ;sequence DCD 8,7,6,5,50,4,-1,-5 ;no monotonic
   13 00000004 FFFFFFFD 
              FFFFFFFE 
              FFFFFFFF 
              00000002 
              00000003 
              00000005 
              0000000A 
              0000000F sequence
                               DCD              -3,-2,-1,2,3,5,10,15 
                                                            ;increasing
   14 00000024         ;sequence DCD 8,7,6,5,5,4,-1,-5 ;decreasing
   15 00000024         
   16 00000024         ;check increasing
   17 00000024 E3A01102        MOV              R1,#0x80000000 ;lowest possible
                                                             value at start (si
                                                            gned)
   18 00000028 E59F00F0        LDR              R0,=sequence ;pointer to sequen
                                                            ce
   19 0000002C         increasing_loop
   20 0000002C E4902004        LDR              R2,[R0],#4  ;load value (post-a
                                                            ddressing mode)
   21 00000030 E1520001        CMP              R2,R1
   22 00000034 BA00000C        BLT              decreasing  ;exit directly if f
                                                            ound R2 < R1
   23 00000038 11A01002        MOVNE            R1,R2       ;update previous va
                                                            lue (if not equal)
   24 0000003C E2844001        ADD              R4,R4,#1
   25 00000040 E3540008        CMP              R4,#8
   26 00000044 1AFFFFF8        BNE              increasing_loop
   27 00000048         
   28 00000048         ;compute mean value
   29 00000048         sum_loop
   30 00000048 E5302004        LDR              R2,[R0,#-4]! ;reload the vector
                                                             starting from the 
                                                            end
   31 0000004C E0833002        ADD              R3,R3,R2    ;R3 contains the su
                                                            m of all the values
                                                            
   32 00000050 E2444001        SUB              R4,R4,#1



ARM Macro Assembler    Page 2 


   33 00000054 E3540000        CMP              R4,#0
   34 00000058 1AFFFFFA        BNE              sum_loop
   35 0000005C E1A031A3        LSR              R3,R3,#3    ;dividing R3 by 8 b
                                                            y shifting
   36 00000060 E59F00BC        LDR              R0,=mean
   37 00000064 E5803000        STR              R3,[R0]
   38 00000068 EA00002C        B                end_programm
   39 0000006C         
   40 0000006C         ;check decreasing
   41 0000006C         decreasing
   42 0000006C E3A04000        MOV              R4,#0
   43 00000070 E3E01102        MOV              R1,#0x7fffffff ;highest possibl
                                                            e value at start (s
                                                            igned)
   44 00000074 E59F00A4        LDR              R0,=sequence ;pointer to sequen
                                                            ce
   45 00000078         decreasing_loop
   46 00000078 E4902004        LDR              R2,[R0],#4  ;load value (post-a
                                                            ddressing mode)
   47 0000007C E1520001        CMP              R2,R1
   48 00000080 CA000015        BGT              monotonic   ;exit directly if f
                                                            ound R2 > R1
   49 00000084 11A01002        MOVNE            R1,R2       ;update previous va
                                                            lue (if not equal)
   50 00000088 E2844001        ADD              R4,R4,#1
   51 0000008C E3540008        CMP              R4,#8
   52 00000090 1AFFFFF8        BNE              decreasing_loop
   53 00000094         
   54 00000094         ;larger absolute difference between two consecutive numb
                       ers
   55 00000094 E59F0084        LDR              R0,=sequence
   56 00000098 E3A01000        MOV              R1,#0
   57 0000009C E3A02000        MOV              R2,#0
   58 000000A0 E3A04000        MOV              R4,#0       ;max absolute diffe
                                                            rence temp register
                                                            
   59 000000A4         lad_loop
   60 000000A4 E4901004        LDR              R1,[R0],#4
   61 000000A8 E5902000        LDR              R2,[R0]
   62 000000AC E0421001        SUB              R1,R2,R1
   63 000000B0         ;invert if negative (absolute value) using Bit Clear
   64 000000B0 E3510000        CMP              R1,#0
   65 000000B4 B1C51001        BICLT            R1,R5,R1    ;R5=0
   66 000000B8 E2811001        ADD              R1,R1,#1
   67 000000BC E1510004        CMP              R1,R4
   68 000000C0 C1A04001        MOVGT            R4,R1
   69 000000C4 E2866001        ADD              R6,R6,#1
   70 000000C8 E3560007        CMP              R6,#7       ;one less than arra
                                                            y lenght in this ca
                                                            se (otherwise go af
                                                            ter array the last 
                                                            element)
   71 000000CC 1AFFFFF4        BNE              lad_loop
   72 000000D0         
   73 000000D0 E59F0050        LDR              R0,=max_differ
   74 000000D4 E5804000        STR              R4,[R0]
   75 000000D8 EA000010        B                end_programm
   76 000000DC         
   77 000000DC         ;monotonic sequence, find min and max value



ARM Macro Assembler    Page 3 


   78 000000DC         monotonic
   79 000000DC E59F003C        LDR              R0,=sequence
   80 000000E0 E3A01000        MOV              R1,#0       ;temp register
   81 000000E4 E3A02000        MOV              R2,#0       ;temp for maximum
   82 000000E8 E3A03000        MOV              R3,#0       ;temp for minimum
   83 000000EC E3A04000        MOV              R4,#0       ;counter register
   84 000000F0         min_max_loop
   85 000000F0 E4901004        LDR              R1,[R0],#4
   86 000000F4 E1510002        CMP              R1,R2
   87 000000F8 C1A02001        MOVGT            R2,R1       ;update max
   88 000000FC E1510003        CMP              R1,R3
   89 00000100 B1A03001        MOVLT            R3,R1       ;update min
   90 00000104 E2844001        ADD              R4,R4,#1
   91 00000108 E3540008        CMP              R4,#8
   92 0000010C 1AFFFFF7        BNE              min_max_loop
   93 00000110         
   94 00000110         ;store result in memory
   95 00000110 E59F0014        LDR              R0,=max_value
   96 00000114 E5802000        STR              R2,[R0]
   97 00000118 E59F0010        LDR              R0,=min_value
   98 0000011C E5803000        STR              R3,[R0]
   99 00000120         
  100 00000120         end_programm
  101 00000120         
  102 00000120                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --apcs=interwork --depend=LAB1_ex3.d -oLAB1_ex3.o 
-IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\Philips --predefine="__EVAL SETA 1" --list=
LAB1_ex3.lst LAB1_ex3.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MYDATA 00000000

Symbol: MYDATA
   Definitions
      At line 3 in file LAB1_ex3.s
   Uses
      None
Comment: MYDATA unused
max_differ 00000004

Symbol: max_differ
   Definitions
      At line 5 in file LAB1_ex3.s
   Uses
      At line 73 in file LAB1_ex3.s
Comment: max_differ used once
max_value 00000008

Symbol: max_value
   Definitions
      At line 6 in file LAB1_ex3.s
   Uses
      At line 95 in file LAB1_ex3.s
Comment: max_value used once
mean 00000000

Symbol: mean
   Definitions
      At line 4 in file LAB1_ex3.s
   Uses
      At line 36 in file LAB1_ex3.s
Comment: mean used once
min_value 0000000C

Symbol: min_value
   Definitions
      At line 7 in file LAB1_ex3.s
   Uses
      At line 97 in file LAB1_ex3.s
Comment: min_value used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MYCODE 00000000

Symbol: MYCODE
   Definitions
      At line 9 in file LAB1_ex3.s
   Uses
      None
Comment: MYCODE unused
decreasing 0000006C

Symbol: decreasing
   Definitions
      At line 41 in file LAB1_ex3.s
   Uses
      At line 22 in file LAB1_ex3.s
Comment: decreasing used once
decreasing_loop 00000078

Symbol: decreasing_loop
   Definitions
      At line 45 in file LAB1_ex3.s
   Uses
      At line 52 in file LAB1_ex3.s
Comment: decreasing_loop used once
end_programm 00000120

Symbol: end_programm
   Definitions
      At line 100 in file LAB1_ex3.s
   Uses
      At line 38 in file LAB1_ex3.s
      At line 75 in file LAB1_ex3.s

increasing_loop 0000002C

Symbol: increasing_loop
   Definitions
      At line 19 in file LAB1_ex3.s
   Uses
      At line 26 in file LAB1_ex3.s
Comment: increasing_loop used once
lad_loop 000000A4

Symbol: lad_loop
   Definitions
      At line 59 in file LAB1_ex3.s
   Uses
      At line 71 in file LAB1_ex3.s
Comment: lad_loop used once
min_max_loop 000000F0

Symbol: min_max_loop
   Definitions
      At line 84 in file LAB1_ex3.s
   Uses
      At line 92 in file LAB1_ex3.s
Comment: min_max_loop used once
monotonic 000000DC




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: monotonic
   Definitions
      At line 78 in file LAB1_ex3.s
   Uses
      At line 48 in file LAB1_ex3.s
Comment: monotonic used once
sequence 00000004

Symbol: sequence
   Definitions
      At line 13 in file LAB1_ex3.s
   Uses
      At line 18 in file LAB1_ex3.s
      At line 44 in file LAB1_ex3.s
      At line 55 in file LAB1_ex3.s
      At line 79 in file LAB1_ex3.s

sum_loop 00000048

Symbol: sum_loop
   Definitions
      At line 29 in file LAB1_ex3.s
   Uses
      At line 34 in file LAB1_ex3.s
Comment: sum_loop used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

size_32 00000004

Symbol: size_32
   Definitions
      At line 1 in file LAB1_ex3.s
   Uses
      At line 4 in file LAB1_ex3.s
      At line 5 in file LAB1_ex3.s
      At line 6 in file LAB1_ex3.s
      At line 7 in file LAB1_ex3.s

1 symbol
342 symbols in table
